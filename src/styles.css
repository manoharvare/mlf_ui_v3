/* Global styles for MLF Angular application */

@import "tailwindcss";

/* Add explicit color definitions for buttons */
:root {
  /* Base colors */
  --background: 210 40% 98%;
  --foreground: 222.2 84% 4.9%;
  --border: 214 32% 91%;
  --ring: 199 89% 48%;

  /* Semantic colors */
  --primary: 199 89% 48%;
  --primary-foreground: 0 0% 100%;

  --secondary: 151 81% 96%;
  --secondary-foreground: 160 84% 39%;

  --destructive: 0 72% 51%;
  --destructive-foreground: 0 0% 100%;

  --muted: 199 89% 96%;
  --muted-foreground: 215 16% 47%;

  --accent: 120 60% 90%;
  --accent-foreground: 160 84% 39%;

  /* Component colors */
  --input: 0 0% 100%;
  --card: 0 0% 100%;
  --card-foreground: 222.2 84% 4.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 222.2 84% 4.9%;
}

/* Theme configuration using Tailwind CSS v4 CSS-first approach */
@theme {
  /* Typography */
  --font-size: 14px;
  --font-weight-normal: 400;
  --font-weight-medium: 500;

  /* Layout */
  --radius: 0.5rem;

  /* Container configuration */
  --container-padding: 2rem;
  --container-max-width-2xl: 1400px;

  /* Border radius */
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  /* Animation */
  --animation-accordion-down: accordion-down 0.2s ease-out;
  --animation-accordion-up: accordion-up 0.2s ease-out;
}

/* Base typography */
h1 {
  font-size: 1.5rem;
  font-weight: var(--font-weight-medium);
  line-height: 1.5;
}

h2 {
  font-size: 1.25rem;
  font-weight: var(--font-weight-medium);
  line-height: 1.5;
}

h3 {
  font-size: 1.125rem;
  font-weight: var(--font-weight-medium);
  line-height: 1.5;
}

h4 {
  font-size: 1rem;
  font-weight: var(--font-weight-medium);
  line-height: 1.5;
}

p {
  font-size: 1rem;
  font-weight: var(--font-weight-normal);
  line-height: 1.5;
}

label {
  font-size: 1rem;
  font-weight: var(--font-weight-medium);
  line-height: 1.5;
}

button {
  font-size: 1rem;
  font-weight: var(--font-weight-medium);
  line-height: 1.5;
}

input {
  font-size: 1rem;
  font-weight: var(--font-weight-normal);
  line-height: 1.5;
}

html {
  font-size: var(--font-size);
}

body {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

* {
  border-color: hsl(var(--border));
}

/* Explicit button color utilities */
.bg-primary {
  background-color: hsl(var(--primary));
}

.text-primary-foreground {
  color: hsl(var(--primary-foreground));
}

.bg-secondary {
  background-color: hsl(var(--secondary));
}

.text-secondary-foreground {
  color: hsl(var(--secondary-foreground));
}

.bg-destructive {
  background-color: hsl(var(--destructive));
}

.text-destructive-foreground {
  color: hsl(var(--destructive-foreground));
}

.bg-accent {
  background-color: hsl(var(--accent));
}

.text-accent-foreground {
  color: hsl(var(--accent-foreground));
}

.hover\:bg-primary\/90:hover {
  background-color: hsl(var(--primary) / 0.9);
}

.hover\:bg-secondary\/80:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.hover\:bg-destructive\/90:hover {
  background-color: hsl(var(--destructive) / 0.9);
}

.hover\:bg-accent:hover {
  background-color: hsl(var(--accent));
}

.hover\:text-accent-foreground:hover {
  color: hsl(var(--accent-foreground));
}

/* Additional utility classes for Select component */
.bg-popover {
  background-color: hsl(var(--popover));
}

.text-popover-foreground {
  color: hsl(var(--popover-foreground));
}

.border-border {
  border-color: hsl(var(--border));
}

.text-muted-foreground {
  color: hsl(var(--muted-foreground));
}

.bg-muted {
  background-color: hsl(var(--muted));
}

.text-destructive {
  color: hsl(var(--destructive));
}

.bg-input {
  background-color: hsl(var(--input));
}

.focus\:ring-ring:focus {
  --tw-ring-color: hsl(var(--ring));
}

.focus\:ring-destructive:focus {
  --tw-ring-color: hsl(var(--destructive));
}

.border-input {
  border-color: hsl(var(--input));
}

.border-destructive {
  border-color: hsl(var(--destructive));
}

.placeholder\:text-muted-foreground::placeholder {
  color: hsl(var(--muted-foreground));
}

.text-foreground {
  color: hsl(var(--foreground));
}

.hover\:text-foreground:hover {
  color: hsl(var(--foreground));
}

/* Additional utility classes for form elements */
.bg-transparent {
  background-color: transparent;
}

.ring-offset-background {
  --tw-ring-offset-color: hsl(var(--background));
}

.focus\:ring-1:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

/* Card utility classes */
.bg-card {
  background-color: hsl(var(--card));
}

.text-card-foreground {
  color: hsl(var(--card-foreground));
}

/* Animation utility classes */
.animate-in {
  animation-fill-mode: both;
}

.fade-in-0 {
  animation-name: fadeIn;
  animation-duration: 150ms;
}

.zoom-in-95 {
  animation-name: zoomIn;
  animation-duration: 150ms;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Keyframes for animations */
@keyframes accordion-down {
  from { height: 0; }
  to { height: var(--accordion-content-height); }
}

@keyframes accordion-up {
  from { height: var(--accordion-content-height); }
  to { height: 0; }
}
